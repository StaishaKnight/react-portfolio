{"ast":null,"code":"import _defineProperty from\"/Users/staishaknight/Desktop/projects/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/staishaknight/Desktop/projects/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{validateEmail}from'../../utils/helpers';function ContactForm(){var _useState=useState({name:'',email:'',message:''}),_useState2=_slicedToArray(_useState,2),formState=_useState2[0],setFormState=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),errorMessage=_useState4[0],setErrorMessage=_useState4[1];var name=formState.name,email=formState.email,message=formState.message;var handleSubmit=function handleSubmit(e){e.preventDefault();if(!errorMessage){setFormState(_defineProperty({},e.target.name,e.target.value));console.log('Form',formState);}};var handleChange=function handleChange(e){if(e.target.name==='email'){var isValid=validateEmail(e.target.value);if(!isValid){setErrorMessage('Your email is invalid.');}else{setErrorMessage('');}}else{if(!e.target.value.length){setErrorMessage(\"\".concat(e.target.name,\" is required.\"));}else{setErrorMessage('');}}};return/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"h1\",{\"data-testid\":\"h1tag\"},\"Contact me\"),/*#__PURE__*/React.createElement(\"form\",{id:\"contact-form\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"name\",defaultValue:name,onBlur:handleChange})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email address:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",name:\"email\",defaultValue:email,onBlur:handleChange})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"message\"},\"Message:\"),/*#__PURE__*/React.createElement(\"textarea\",{name:\"message\",rows:\"5\",defaultValue:message,onBlur:handleChange})),errorMessage&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{className:\"error-text\"},errorMessage)),/*#__PURE__*/React.createElement(\"button\",{\"data-testid\":\"button\",type:\"submit\"},\"Submit\")));}export default ContactForm;","map":{"version":3,"sources":["/Users/staishaknight/Desktop/projects/react-portfolio/src/components/Contact/index.js"],"names":["React","useState","validateEmail","ContactForm","name","email","message","formState","setFormState","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","target","value","console","log","handleChange","isValid","length"],"mappings":"0VAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,aAAT,KAA8B,qBAA9B,CAEA,QAASC,CAAAA,WAAT,EAAuB,CACrB,cAAkCF,QAAQ,CAAC,CAAEG,IAAI,CAAE,EAAR,CAAYC,KAAK,CAAE,EAAnB,CAAuBC,OAAO,CAAE,EAAhC,CAAD,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eAEA,eAAwCP,QAAQ,CAAC,EAAD,CAAhD,yCAAOQ,YAAP,eAAqBC,eAArB,eACA,GAAQN,CAAAA,IAAR,CAAiCG,SAAjC,CAAQH,IAAR,CAAcC,KAAd,CAAiCE,SAAjC,CAAcF,KAAd,CAAqBC,OAArB,CAAiCC,SAAjC,CAAqBD,OAArB,CAEA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACA,GAAI,CAACJ,YAAL,CAAmB,CACjBD,YAAY,oBAAII,CAAC,CAACE,MAAF,CAASV,IAAb,CAAoBQ,CAAC,CAACE,MAAF,CAASC,KAA7B,EAAZ,CACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoBV,SAApB,EACD,CACF,CAND,CAQA,GAAMW,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACN,CAAD,CAAO,CAC1B,GAAIA,CAAC,CAACE,MAAF,CAASV,IAAT,GAAkB,OAAtB,CAA+B,CAC7B,GAAMe,CAAAA,OAAO,CAAGjB,aAAa,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAA7B,CACA,GAAI,CAACI,OAAL,CAAc,CACZT,eAAe,CAAC,wBAAD,CAAf,CACD,CAFD,IAEO,CACLA,eAAe,CAAC,EAAD,CAAf,CACD,CACF,CAPD,IAOO,CACL,GAAI,CAACE,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeK,MAApB,CAA4B,CAC1BV,eAAe,WAAIE,CAAC,CAACE,MAAF,CAASV,IAAb,kBAAf,CACD,CAFD,IAEO,CACLM,eAAe,CAAC,EAAD,CAAf,CACD,CACF,CACF,CAfD,CAiBA,mBACE,gDACE,0BAAI,cAAY,OAAhB,eADF,cAEE,4BAAM,EAAE,CAAC,cAAT,CAAwB,QAAQ,CAAEC,YAAlC,eACE,4CACE,6BAAO,OAAO,CAAC,MAAf,UADF,cAEE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,MAAxB,CAA+B,YAAY,CAAEP,IAA7C,CAAmD,MAAM,CAAEc,YAA3D,EAFF,CADF,cAKE,4CACE,6BAAO,OAAO,CAAC,OAAf,mBADF,cAEE,6BAAO,IAAI,CAAC,OAAZ,CAAoB,IAAI,CAAC,OAAzB,CAAiC,YAAY,CAAEb,KAA/C,CAAsD,MAAM,CAAEa,YAA9D,EAFF,CALF,cASE,4CACE,6BAAO,OAAO,CAAC,SAAf,aADF,cAEE,gCAAU,IAAI,CAAC,SAAf,CAAyB,IAAI,CAAC,GAA9B,CAAkC,YAAY,CAAEZ,OAAhD,CAAyD,MAAM,CAAEY,YAAjE,EAFF,CATF,CAaGT,YAAY,eACX,4CACE,yBAAG,SAAS,CAAC,YAAb,EAA2BA,YAA3B,CADF,CAdJ,cAkBE,8BAAQ,cAAY,QAApB,CAA6B,IAAI,CAAC,QAAlC,WAlBF,CAFF,CADF,CAyBD,CAED,cAAeN,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const { name, email, message } = formState;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!errorMessage) {\n      setFormState({ [e.target.name]: e.target.value });\n      console.log('Form', formState);\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n  };\n\n  return (\n    <section>\n      <h1 data-testid=\"h1tag\">Contact me</h1>\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email address:</label>\n          <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"message\">Message:</label>\n          <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\n        </div>\n        {errorMessage && (\n          <div>\n            <p className=\"error-text\">{errorMessage}</p>\n          </div>\n        )}\n        <button data-testid=\"button\" type=\"submit\">Submit</button>\n      </form>\n    </section>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}